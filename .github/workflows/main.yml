name: Main

on:
  pull_request:

jobs:
  install:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [ 16.13.2 ]
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install

  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install

      - name: Prisma migrate
        run: |
          cd apps/api
          pnpm exec prisma generate
          pnpm --filter=@codeimage/prisma-models build

      - name: Lint
        run: pnpm lint

  build:
    name: Build
    needs: install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install

      - name: Prisma migrate
        run: |
          cd apps/api
          pnpm exec prisma generate
          pnpm --filter=@codeimage/prisma-models build

      - name: Build
        run: |
          pnpm build:prod

  #      TODO: fix
  #      - name: Typecheck
  #        run: |
  #          pnpm typecheck

  be-test:
    name: Test
    needs: install
    runs-on: ubuntu-latest

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps TCP port 5432 on service container to the host
          - 5432:5432

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ga_codeimage?schema=${{ github.ref_name }}

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install

      - name: Prisma migrate
        run: |
          cd apps/api
          pnpm exec prisma migrate deploy
          pnpm exec prisma generate
          pnpm --filter=@codeimage/prisma-models build

      - name: Typescript
        run: pnpm --filter=@codeimage/api build:ts

      - name: Test
        run: pnpm --filter=@codeimage/api test



concurrency:
  group: main-${{ github.head_ref }}
  cancel-in-progress: true
