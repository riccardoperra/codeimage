name: Build

on:
  pull_request:
    paths:
      - 'packages/**'
      - 'apps/**'
      - 'package.json'
      - 'tsconfig*'
      - ".changeset/**"
    branches:
      - main
  push:
    branches:
      - main
      - develop
      - '!release/**'

env:
  IS_MAIN_BRANCH: ${{ github.ref == 'refs/heads/main' }}

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [ 16.13.2 ]
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.23.2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint --filter @codeimage/*

      - name: Type checking
        run: pnpm typecheck --filter @codeimage/*

      - name: Build
        run: |
          git checkout main
          pnpm build:prod

      - name: Create Release Pull Request
        uses: changesets/action@v1
        with:
          commit: "ci(changesets): version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release to @dev tag
        if: steps.changesets.outputs.published != 'true'
        run: |
          git checkout main
          pnpm changeset version --snapshot dev
          pnpm changeset publish --tag dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update changelog
        if: steps.changesets.outputs.published == 'true'
        run: |
          pnpm changelog:write
          pnpm changelog:commit

concurrency:
  group: build-${{ github.head_ref }}
  cancel-in-progress: true
