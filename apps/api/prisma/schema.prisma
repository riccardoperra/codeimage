// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../packages/prisma-models/generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  provider  String
  projects  Project[]
}

model Project {
  id            String                @id @default(uuid())
  name          String
  frame         SnippetFrame?
  terminal      SnippetTerminal?
  editorOptions SnippetEditorOptions?
  editorTabs    SnippetEditorTab[]
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt
  user          User                  @relation(fields: [userId], references: [id])
  userId        String

  @@unique([id, userId])
  @@index([name, userId])
}

model SnippetFrame {
  id         String   @id @default(uuid())
  project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId  String   @unique
  background String?
  padding    Int?
  radius     Int?
  visible    Boolean?
  opacity    Float?
}

model SnippetTerminal {
  id                  String   @id @default(uuid())
  project             Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId           String   @unique
  showHeader          Boolean?
  type                String?
  accentVisible       Boolean?
  shadow              String?
  background          String?
  textColor           String?
  showWatermark       Boolean?
  showGlassReflection Boolean?
  opacity             Float?
  alternativeTheme    Boolean?
}

model SnippetEditorOptions {
  id              String   @id @default(uuid())
  project         Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId       String   @unique
  fontId          String?
  fontWeight      Int?
  showLineNumbers Boolean?
  themeId         String?
}

model SnippetEditorTab {
  id         String  @id @default(uuid())
  project    Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId  String  @unique
  code       String?
  languageId String?
  tabName    String?
}
